{
    "contents" : "# Note: percent map is designed to work with the counties data set\n# It may not work correctly with other data sets if their row order does \n# not exactly match the order in which the maps package plots counties\npercent_map <- function(var, color, legend.title, min = 0, max = 100) {\n\n  # generate vector of fill colors for map\n  shades <- colorRampPalette(c(\"white\", color))(100)\n  \n  # constrain gradient to percents that occur between min and max\n  var <- pmax(var, min)\n  var <- pmin(var, max)\n  percents <- as.integer(cut(var, 100, \n    include.lowest = TRUE, ordered = TRUE))\n  fills <- shades[percents]\n\n  # plot choropleth map\n  map(\"county\", fill = TRUE, col = fills, \n    resolution = 0, lty = 0, projection = \"polyconic\", \n    myborder = 0, mar = c(0,0,0,0))\n  \n  # overlay state borders\n  map(\"state\", col = \"white\", fill = FALSE, add = TRUE,\n    lty = 1, lwd = 1, projection = \"polyconic\", \n    myborder = 0, mar = c(0,0,0,0))\n  \n  # add a legend\n  inc <- (max - min) / 4\n  legend.text <- c(paste0(min, \" % or less\"),\n    paste0(min + inc, \" %\"),\n    paste0(min + 2 * inc, \" %\"),\n    paste0(min + 3 * inc, \" %\"),\n    paste0(max, \" % or more\"))\n  \n  legend(\"bottomleft\", \n    legend = legend.text, \n    fill = shades[c(1, 25, 50, 75, 100)], \n    title = legend.title)\n}",
    "created" : 1432825958272.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "430586707",
    "id" : "19BD5BDB",
    "lastKnownWriteTime" : 1432810243,
    "path" : "C:/2Piworking/Kaggle/RProjectGowLearn/ShinyTesting/Helper/helpers.R",
    "project_path" : "Helper/helpers.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}